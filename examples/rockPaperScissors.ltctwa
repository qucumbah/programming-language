// Import/export memory
memory(1u) export(mem);

func export init(width: i32, height: i32): i32 {
  // "||", "$$", and "!" operators
  if (width < 0 | height < 0) {
    return -1;
  }

  @(0 as $i32) = width;
  @(4 as $i32) = height;

  return 0;
}

func export step(): $i32 {
  const width: i32 = @(0 as $i32);
  const height: i32 = @(4 as $i32);

  const imageStart: $i32 = 8 as $i32;

  // Hexadecimal numeric literals
  // Shift/rotate operations?
  var color: i32 = 0;

  log_i32(255u << 24);

  var y: i32 = 0;
  while (y < height) {
    var x: i32 = 0;
    while (x < width) {
      const offset: $i32 = (y * width + x) * 4 as $i32;
      // @(imageStart + offset) = color / 256 * 256 + 255;
      @(imageStart + offset) = 255 * 256 * 256 * 256 + 0 * 256 * 256 + 0 * 256 + 0;
      @(imageStart + offset) = 255 << 24 + 0 << 16 + 0 << 8 + 0;
      color = color + 1;
      x = x + 1;
    }
    y = y + 1;
  }

  return imageStart;
}

func import(log::_i32) log_i32(value: i32): void;
